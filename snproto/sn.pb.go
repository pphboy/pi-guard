// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: sn.proto

package snproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeAppArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*anypb.Any `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *NodeAppArray) Reset() {
	*x = NodeAppArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAppArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAppArray) ProtoMessage() {}

func (x *NodeAppArray) ProtoReflect() protoreflect.Message {
	mi := &file_sn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAppArray.ProtoReflect.Descriptor instead.
func (*NodeAppArray) Descriptor() ([]byte, []int) {
	return file_sn_proto_rawDescGZIP(), []int{0}
}

func (x *NodeAppArray) GetValues() []*anypb.Any {
	if x != nil {
		return x.Values
	}
	return nil
}

// TODO: 写好对应Message
type NodeAppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAppId      string                 `protobuf:"bytes,1,opt,name=NodeAppId,proto3" json:"NodeAppId,omitempty"`
	NodeId         string                 `protobuf:"bytes,2,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	NodeAppType    int32                  `protobuf:"varint,3,opt,name=NodeAppType,proto3" json:"NodeAppType,omitempty"`
	NodeAppName    string                 `protobuf:"bytes,4,opt,name=NodeAppName,proto3" json:"NodeAppName,omitempty"`
	NodeAppIntro   string                 `protobuf:"bytes,5,opt,name=NodeAppIntro,proto3" json:"NodeAppIntro,omitempty"`
	NodeAppPort    string                 `protobuf:"bytes,6,opt,name=NodeAppPort,proto3" json:"NodeAppPort,omitempty"`
	NodeAppDomain  string                 `protobuf:"bytes,7,opt,name=NodeAppDomain,proto3" json:"NodeAppDomain,omitempty"`
	NodeAppStatus  int32                  `protobuf:"varint,8,opt,name=NodeAppStatus,proto3" json:"NodeAppStatus,omitempty"`
	NodeAppVersion int32                  `protobuf:"varint,9,opt,name=NodeAppVersion,proto3" json:"NodeAppVersion,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	DeletedAt      *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *NodeAppInfo) Reset() {
	*x = NodeAppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAppInfo) ProtoMessage() {}

func (x *NodeAppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAppInfo.ProtoReflect.Descriptor instead.
func (*NodeAppInfo) Descriptor() ([]byte, []int) {
	return file_sn_proto_rawDescGZIP(), []int{1}
}

func (x *NodeAppInfo) GetNodeAppId() string {
	if x != nil {
		return x.NodeAppId
	}
	return ""
}

func (x *NodeAppInfo) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeAppInfo) GetNodeAppType() int32 {
	if x != nil {
		return x.NodeAppType
	}
	return 0
}

func (x *NodeAppInfo) GetNodeAppName() string {
	if x != nil {
		return x.NodeAppName
	}
	return ""
}

func (x *NodeAppInfo) GetNodeAppIntro() string {
	if x != nil {
		return x.NodeAppIntro
	}
	return ""
}

func (x *NodeAppInfo) GetNodeAppPort() string {
	if x != nil {
		return x.NodeAppPort
	}
	return ""
}

func (x *NodeAppInfo) GetNodeAppDomain() string {
	if x != nil {
		return x.NodeAppDomain
	}
	return ""
}

func (x *NodeAppInfo) GetNodeAppStatus() int32 {
	if x != nil {
		return x.NodeAppStatus
	}
	return 0
}

func (x *NodeAppInfo) GetNodeAppVersion() int32 {
	if x != nil {
		return x.NodeAppVersion
	}
	return 0
}

func (x *NodeAppInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NodeAppInfo) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *NodeAppInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type PiCloudApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      string                 `protobuf:"bytes,1,opt,name=AppId,proto3" json:"AppId,omitempty"`
	AppName    string                 `protobuf:"bytes,2,opt,name=AppName,proto3" json:"AppName,omitempty"`
	AppIntro   string                 `protobuf:"bytes,3,opt,name=AppIntro,proto3" json:"AppIntro,omitempty"`
	AppManual  string                 `protobuf:"bytes,4,opt,name=AppManual,proto3" json:"AppManual,omitempty"`
	AppVersion int32                  `protobuf:"varint,5,opt,name=AppVersion,proto3" json:"AppVersion,omitempty"`
	AppSite    string                 `protobuf:"bytes,6,opt,name=AppSite,proto3" json:"AppSite,omitempty"`
	AppHistory string                 `protobuf:"bytes,7,opt,name=AppHistory,proto3" json:"AppHistory,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	DeletedAt  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty"`
}

func (x *PiCloudApp) Reset() {
	*x = PiCloudApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PiCloudApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PiCloudApp) ProtoMessage() {}

func (x *PiCloudApp) ProtoReflect() protoreflect.Message {
	mi := &file_sn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PiCloudApp.ProtoReflect.Descriptor instead.
func (*PiCloudApp) Descriptor() ([]byte, []int) {
	return file_sn_proto_rawDescGZIP(), []int{2}
}

func (x *PiCloudApp) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *PiCloudApp) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *PiCloudApp) GetAppIntro() string {
	if x != nil {
		return x.AppIntro
	}
	return ""
}

func (x *PiCloudApp) GetAppManual() string {
	if x != nil {
		return x.AppManual
	}
	return ""
}

func (x *PiCloudApp) GetAppVersion() int32 {
	if x != nil {
		return x.AppVersion
	}
	return 0
}

func (x *PiCloudApp) GetAppSite() string {
	if x != nil {
		return x.AppSite
	}
	return ""
}

func (x *PiCloudApp) GetAppHistory() string {
	if x != nil {
		return x.AppHistory
	}
	return ""
}

func (x *PiCloudApp) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PiCloudApp) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PiCloudApp) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type NodeSys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId     string                 `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	NodeName   string                 `protobuf:"bytes,2,opt,name=NodeName,proto3" json:"NodeName,omitempty"`
	NodeStatus int32                  `protobuf:"varint,3,opt,name=NodeStatus,proto3" json:"NodeStatus,omitempty"`
	NodeDomain string                 `protobuf:"bytes,4,opt,name=NodeDomain,proto3" json:"NodeDomain,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	DeletedAt  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty"`
}

func (x *NodeSys) Reset() {
	*x = NodeSys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSys) ProtoMessage() {}

func (x *NodeSys) ProtoReflect() protoreflect.Message {
	mi := &file_sn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSys.ProtoReflect.Descriptor instead.
func (*NodeSys) Descriptor() ([]byte, []int) {
	return file_sn_proto_rawDescGZIP(), []int{3}
}

func (x *NodeSys) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeSys) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeSys) GetNodeStatus() int32 {
	if x != nil {
		return x.NodeStatus
	}
	return 0
}

func (x *NodeSys) GetNodeDomain() string {
	if x != nil {
		return x.NodeDomain
	}
	return ""
}

func (x *NodeSys) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NodeSys) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NodeSys) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_sn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_sn_proto_rawDescGZIP(), []int{4}
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string     `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Code    int32      `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
	Data    *anypb.Any `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_sn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_sn_proto_rawDescGZIP(), []int{5}
}

func (x *Result) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Result) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Result) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

type MonitorPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Json string `protobuf:"bytes,1,opt,name=Json,proto3" json:"Json,omitempty"`
}

func (x *MonitorPacket) Reset() {
	*x = MonitorPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sn_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorPacket) ProtoMessage() {}

func (x *MonitorPacket) ProtoReflect() protoreflect.Message {
	mi := &file_sn_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorPacket.ProtoReflect.Descriptor instead.
func (*MonitorPacket) Descriptor() ([]byte, []int) {
	return file_sn_proto_rawDescGZIP(), []int{6}
}

func (x *MonitorPacket) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

var File_sn_proto protoreflect.FileDescriptor

var file_sn_proto_rawDesc = []byte{
	0x0a, 0x08, 0x73, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x3c, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12,
	0x2c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xef, 0x03,
	0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a,
	0x09, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x6f, 0x64, 0x65,
	0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4e,
	0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x4e,
	0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x4e, 0x6f, 0x64, 0x65,
	0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x4e, 0x6f, 0x64,
	0x65, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xfe, 0x02, 0x0a, 0x0a, 0x50, 0x69, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70,
	0x70, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41,
	0x70, 0x70, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x41, 0x70,
	0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x53,
	0x69, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x53, 0x69,
	0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x70, 0x70, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xab, 0x02, 0x0a, 0x07, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x60, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x28, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x23, 0x0a, 0x0d, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4a, 0x73,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4a, 0x73, 0x6f, 0x6e, 0x32, 0x4b,
	0x0a, 0x0e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x39, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x0e, 0x2e, 0x73, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x16, 0x2e, 0x73, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x00, 0x32, 0x9a, 0x01, 0x0a, 0x0b,
	0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x2e, 0x73, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x10, 0x2e, 0x73, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x22, 0x00, 0x12, 0x2c,
	0x0a, 0x08, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x0e, 0x2e, 0x73, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x73, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x06,
	0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x12, 0x0e, 0x2e, 0x73, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x73, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x9c, 0x02, 0x0a, 0x0e, 0x4e, 0x6f, 0x64,
	0x65, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x4c,
	0x6f, 0x61, 0x64, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x2e, 0x73, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x73, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0c, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x41, 0x70, 0x70, 0x12, 0x14, 0x2e, 0x73, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x2e, 0x73, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x12, 0x13, 0x2e, 0x73, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x70, 0x1a,
	0x0f, 0x2e, 0x73, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x12, 0x2f, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x14, 0x2e, 0x73, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x0f, 0x2e, 0x73, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14,
	0x2e, 0x73, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x2e, 0x73, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x70, 0x69, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x2f, 0x73, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_sn_proto_rawDescOnce sync.Once
	file_sn_proto_rawDescData = file_sn_proto_rawDesc
)

func file_sn_proto_rawDescGZIP() []byte {
	file_sn_proto_rawDescOnce.Do(func() {
		file_sn_proto_rawDescData = protoimpl.X.CompressGZIP(file_sn_proto_rawDescData)
	})
	return file_sn_proto_rawDescData
}

var file_sn_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_sn_proto_goTypes = []interface{}{
	(*NodeAppArray)(nil),          // 0: snproto.NodeAppArray
	(*NodeAppInfo)(nil),           // 1: snproto.NodeAppInfo
	(*PiCloudApp)(nil),            // 2: snproto.PiCloudApp
	(*NodeSys)(nil),               // 3: snproto.NodeSys
	(*Empty)(nil),                 // 4: snproto.Empty
	(*Result)(nil),                // 5: snproto.Result
	(*MonitorPacket)(nil),         // 6: snproto.MonitorPacket
	(*anypb.Any)(nil),             // 7: google.protobuf.Any
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_sn_proto_depIdxs = []int32{
	7,  // 0: snproto.NodeAppArray.values:type_name -> google.protobuf.Any
	8,  // 1: snproto.NodeAppInfo.CreatedAt:type_name -> google.protobuf.Timestamp
	8,  // 2: snproto.NodeAppInfo.DeletedAt:type_name -> google.protobuf.Timestamp
	8,  // 3: snproto.NodeAppInfo.UpdatedAt:type_name -> google.protobuf.Timestamp
	8,  // 4: snproto.PiCloudApp.CreatedAt:type_name -> google.protobuf.Timestamp
	8,  // 5: snproto.PiCloudApp.UpdatedAt:type_name -> google.protobuf.Timestamp
	8,  // 6: snproto.PiCloudApp.DeletedAt:type_name -> google.protobuf.Timestamp
	8,  // 7: snproto.NodeSys.CreatedAt:type_name -> google.protobuf.Timestamp
	8,  // 8: snproto.NodeSys.UpdatedAt:type_name -> google.protobuf.Timestamp
	8,  // 9: snproto.NodeSys.DeletedAt:type_name -> google.protobuf.Timestamp
	7,  // 10: snproto.Result.Data:type_name -> google.protobuf.Any
	4,  // 11: snproto.MonitorService.GetInfoPacket:input_type -> snproto.Empty
	4,  // 12: snproto.NodeService.GetNodeInfo:input_type -> snproto.Empty
	4,  // 13: snproto.NodeService.Shutdown:input_type -> snproto.Empty
	4,  // 14: snproto.NodeService.Reboot:input_type -> snproto.Empty
	4,  // 15: snproto.NodeAppService.LoadAppList:input_type -> snproto.Empty
	1,  // 16: snproto.NodeAppService.UninstallApp:input_type -> snproto.NodeAppInfo
	2,  // 17: snproto.NodeAppService.InstallApp:input_type -> snproto.PiCloudApp
	1,  // 18: snproto.NodeAppService.Stop:input_type -> snproto.NodeAppInfo
	1,  // 19: snproto.NodeAppService.Restart:input_type -> snproto.NodeAppInfo
	6,  // 20: snproto.MonitorService.GetInfoPacket:output_type -> snproto.MonitorPacket
	3,  // 21: snproto.NodeService.GetNodeInfo:output_type -> snproto.NodeSys
	4,  // 22: snproto.NodeService.Shutdown:output_type -> snproto.Empty
	4,  // 23: snproto.NodeService.Reboot:output_type -> snproto.Empty
	0,  // 24: snproto.NodeAppService.LoadAppList:output_type -> snproto.NodeAppArray
	5,  // 25: snproto.NodeAppService.UninstallApp:output_type -> snproto.Result
	5,  // 26: snproto.NodeAppService.InstallApp:output_type -> snproto.Result
	5,  // 27: snproto.NodeAppService.Stop:output_type -> snproto.Result
	5,  // 28: snproto.NodeAppService.Restart:output_type -> snproto.Result
	20, // [20:29] is the sub-list for method output_type
	11, // [11:20] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_sn_proto_init() }
func file_sn_proto_init() {
	if File_sn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeAppArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeAppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sn_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PiCloudApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sn_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeSys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sn_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sn_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sn_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_sn_proto_goTypes,
		DependencyIndexes: file_sn_proto_depIdxs,
		MessageInfos:      file_sn_proto_msgTypes,
	}.Build()
	File_sn_proto = out.File
	file_sn_proto_rawDesc = nil
	file_sn_proto_goTypes = nil
	file_sn_proto_depIdxs = nil
}
